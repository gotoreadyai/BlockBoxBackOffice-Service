import{l as r}from"./compute-gcd-C3gVrxBz.js";import{l as e}from"./validate.io-array-K7AlgBFX.js";import{l as a}from"./validate.io-integer-array-CDpatKg4.js";import{l as i}from"./validate.io-function-CsX-6D6V.js";var t=r,n=e,o=a,l=i;var u=function(){var r,e,a,i,u,f,s,m=arguments.length;for(r=new Array(m),s=0;s<m;s++)r[s]=arguments[s];if(o(r)){if(2===m)return(u=r[0])<0&&(u=-u),(f=r[1])<0&&(f=-f),0===u||0===f?0:u/t(u,f)*f;a=r}else{if(!n(r[0]))throw new TypeError("lcm()::invalid input argument. Must provide an array of integers. Value: `"+r[0]+"`.");if(m>1){if(a=r[0],e=r[1],!l(e))throw new TypeError("lcm()::invalid input argument. Accessor must be a function. Value: `"+e+"`.")}else a=r[0]}if((i=a.length)<2)return null;if(e){for(u=new Array(i),s=0;s<i;s++)u[s]=e(a[s],s);a=u}if(m<3&&!o(a))throw new TypeError("lcm()::invalid input argument. Accessed array values must be integers. Value: `"+a+"`.");for(s=0;s<i;s++)(u=a[s])<0&&(a[s]=-u);for(u=a[0],s=1;s<i;s++){if(f=a[s],0===u||0===f)return 0;u=u/t(u,f)*f}return u};export{u as l};
