import{l as r}from"./validate.io-array-K7AlgBFX.js";import{l as e}from"./validate.io-integer-array-CDpatKg4.js";import{l as n}from"./validate.io-function-CsX-6D6V.js";var i=r,t=e,a=n,o=Math.pow(2,31)-1;function f(r,e){var n,i=1;if(0===r)return e;if(0===e)return r;for(;r%2==0&&e%2==0;)r/=2,e/=2,i*=2;for(;r%2==0;)r/=2;for(;e;){for(;e%2==0;)e/=2;r>e&&(n=e,e=r,r=n),e-=r}return i*r}function u(r,e){var n,i=0;if(0===r)return e;if(0===e)return r;for(;!(1&r||1&e);)r>>>=1,e>>>=1,i++;for(;!(1&r);)r>>>=1;for(;e;){for(;!(1&e);)e>>>=1;r>e&&(n=e,e=r,r=n),e-=r}return r<<i}var l=function(){var r,e,n,l,s,v,c,m=arguments.length;for(r=new Array(m),c=0;c<m;c++)r[c]=arguments[c];if(t(r)){if(2===m)return(s=r[0])<0&&(s=-s),(v=r[1])<0&&(v=-v),s<=o&&v<=o?u(s,v):f(s,v);n=r}else{if(!i(r[0]))throw new TypeError("gcd()::invalid input argument. Must provide an array of integers. Value: `"+r[0]+"`.");if(m>1){if(n=r[0],e=r[1],!a(e))throw new TypeError("gcd()::invalid input argument. Accessor must be a function. Value: `"+e+"`.")}else n=r[0]}if((l=n.length)<2)return null;if(e){for(s=new Array(l),c=0;c<l;c++)s[c]=e(n[c],c);n=s}if(m<3&&!t(n))throw new TypeError("gcd()::invalid input argument. Accessed array values must be integers. Value: `"+n+"`.");for(c=0;c<l;c++)(s=n[c])<0&&(n[c]=-s);for(s=n[0],c=1;c<l;c++)s=(v=n[c])<=o&&s<=o?u(s,v):f(s,v);return s};export{l};
